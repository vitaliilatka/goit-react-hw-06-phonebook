{"version":3,"sources":["components/ContactListItem/ContactListItem.module.css","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Container/Container.module.css","components/Filter/Filter.module.css","components/ContactListItem/ContactListItem.jsx","redux-js/contacts/contactsActions.js","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.jsx","components/Container/Container.jsx","components/Filter/Filter.jsx","App.js","redux-js/contacts/contactsReducer.js","redux-js/store.js","index.js"],"names":["module","exports","ContactListItem","id","name","number","onDeleteContact","className","styles","contact","tel","type","onClick","addContact","createAction","payload","shortid","generate","deleteContact","changeFilter","getFilteredContacts","allContacts","filter","normalizedFilter","toLowerCase","includes","connect","contacts","items","dispatch","contactsActions","ContactList","map","initialState","onSubmit","useState","inputValue","setInputValue","changeInput","e","currentTarget","value","form","preventDefault","pattern","title","required","placeholder","onChange","buttonForm","Container","children","container","Filter","input","defaultProps","state","target","App","createReducer","actions","normalizedName","find","alert","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.dd1ecd08.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"ContactListItem_contact__3uXFA\",\"name\":\"ContactListItem_name__2EDWm\",\"tel\":\"ContactListItem_tel__2VkAm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonForm\":\"ContactForm_buttonForm__1NJYC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactList\":\"ContactList_ContactList__okYs1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2BFax\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__31bKw\"};","import PropTypes from 'prop-types';\r\nimport styles from './ContactListItem.module.css';\r\n\r\nconst ContactListItem = ({ id, name, number, onDeleteContact }) => {\r\n    return (\r\n        <li className={styles.contact}>\r\n            <p className={styles.name}>{name}</p>\r\n            <p className={styles.tel}>{number}</p>\r\n            <button type=\"button\" onClick={() => onDeleteContact(id)}>\r\n                Delete\r\n            </button>\r\n        </li>\r\n    );\r\n};\r\n\r\nContactListItem.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n    onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactListItem;","import shortid from 'shortid';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nconst addContact = createAction('contacts/add', (name, number) => ({\r\n    payload: {\r\n        id: shortid.generate(),\r\n        name,\r\n        number,\r\n    },\r\n}));\r\n\r\nconst deleteContact = createAction('contacts/delete');\r\n\r\nconst changeFilter = createAction('contacts/changeFilter');\r\n\r\n// eslint-disable-next-line\r\nexport default { addContact, deleteContact, changeFilter };","import PropTypes from 'prop-types';\r\nimport ContactListItem from '../ContactListItem/ContactListItem';\r\nimport { connect } from 'react-redux';\r\nimport contactsActions from '../../redux-js/contacts/contactsActions';\r\nimport styles from './ContactList.module.css';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => {\r\n    return (\r\n        <ul className={styles.ContactList}>\r\n            {contacts.map(({ id, name, number }) => (\r\n                <ContactListItem\r\n                    key={id}\r\n                    id={id}\r\n                    name={name}\r\n                    number={number}\r\n                    onDeleteContact={onDeleteContact}\r\n                />\r\n            ))}\r\n        </ul>\r\n    );\r\n};\r\n\r\nContactList.propTypes = {\r\n    contacts: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.string.isRequired,\r\n        }),\r\n    ).isRequired,\r\n    onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nconst getFilteredContacts = (allContacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return allContacts.filter(({ name }) =>\r\n        name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n};\r\n\r\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\r\n    contacts: getFilteredContacts(items, filter),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    onDeleteContact: id => dispatch(contactsActions.deleteContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);","import { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport contactsActions from '../../redux-js/contacts/contactsActions';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactForm.module.css';\r\n\r\nconst initialState = {\r\n    name: '',\r\n    number: '',\r\n};\r\n\r\nconst ContactForm = ({ onSubmit }) => {\r\n    const [inputValue, setInputValue] = useState(initialState);\r\n    const { name, number } = inputValue;\r\n\r\n    const changeInput = e => {\r\n        const { name, value } = e.currentTarget;\r\n        setInputValue({ ...inputValue, [name]: value });\r\n    };\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        onSubmit(name, number);\r\n        setInputValue(initialState);\r\n    };\r\n\r\n    return (\r\n        <form className={styles.form} onSubmit={handleSubmit}>\r\n            <h3>Name</h3>\r\n            <label>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    value={name}\r\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                    required\r\n                    placeholder=\"Enter your name\"\r\n                    onChange={changeInput}\r\n                />\r\n                <br />\r\n            </label>\r\n            <h3>Number</h3>\r\n            <label>\r\n                <input\r\n                    type=\"tel\"\r\n                    name=\"number\"\r\n                    value={number}\r\n                    pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\r\n                    title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\r\n                    required\r\n                    placeholder=\"Enter your number\"\r\n                    onChange={changeInput}\r\n                />\r\n                <br />\r\n            </label>\r\n            <button type=\"submit\" className={styles.buttonForm}>\r\n                Add contact\r\n            </button>\r\n        </form>\r\n    );\r\n};\r\n\r\nContactForm.propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    onSubmit: (name, number) => dispatch(contactsActions.addContact(name, number)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactForm);","import PropTypes from 'prop-types';\r\nimport styles from './Container.module.css';\r\n\r\nconst Container = ({ children }) => (\r\n    <div className={styles.container}>{children}</div>\r\n);\r\n\r\nContainer.propTypes = {\r\n    children: PropTypes.node,\r\n};\r\n\r\nexport default Container;","import PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport contactsActions from '../../redux-js/contacts/contactsActions';\r\nimport styles from './Filter.module.css';\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n    return (\r\n        <>\r\n            <label>\r\n                Find contacts by name\r\n                <input className={styles.input} type=\"text\" value={value} onChange={onChange} />\r\n            </label>\r\n        </>\r\n    );\r\n};\r\n\r\nFilter.defaultProps = {\r\n    value: '',\r\n};\r\n\r\nFilter.propTypes = {\r\n    value: PropTypes.string,\r\n    onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    value: state.contacts.filter,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    onChange: e => dispatch(contactsActions.changeFilter(e.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import ContactList from './components/ContactList/ContactList';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport Container from './components/Container/Container';\nimport Filter from './components/Filter/Filter';\nimport './styles.css';\n\nfunction App() {\n  return (\n    <Container>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </Container>\n  );\n}\n\nexport default App;","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport actions from './contactsActions';\r\n\r\nconst doesContactExist = (state, { payload }) => {\r\n    const { name } = payload;\r\n    const normalizedName = name.toLowerCase();\r\n    if (state.find(contact => contact.name.toLowerCase() === normalizedName)) {\r\n        alert(`${name} is already in contacts`);\r\n        return state;\r\n    }\r\n    return [...state, payload];\r\n};\r\n\r\nconst items = createReducer([], {\r\n    [actions.addContact]: doesContactExist,\r\n    [actions.deleteContact]: (state, { payload }) =>\r\n        state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n    [actions.changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({ items, filter });","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n    persistStore,\r\n    persistReducer,\r\n    FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport contactsReducer from './contacts/contactsReducer';\r\n\r\nconst middleware = [\r\n    ...getDefaultMiddleware({\r\n        serializableCheck: {\r\n            ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n        },\r\n    }),\r\n];\r\n\r\nconst contactsPersistConfig = {\r\n    key: 'contacts',\r\n    storage,\r\n    blacklist: ['filter'],\r\n};\r\n\r\nconst store = configureStore({\r\n    reducer: { contacts: persistReducer(contactsPersistConfig, contactsReducer) },\r\n    middleware,\r\n    devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\n// eslint-disable-next-line\r\nexport default { store, persistor };","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport store from './redux-js/store';\nimport 'modern-normalize/modern-normalize.css';\nimport './styles.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}